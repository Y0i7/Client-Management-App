version: '3.8'

services:
  # Backend (Spring Boot + PostgreSQL)
  backend:
    build: ./Client_Managment_Backend  # Ruta al Dockerfile del backend
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-db:5432/CLIENTS
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: admin1234
    depends_on:
      postgres-db:
        condition: service_healthy
    networks:
      - app-network

  # Frontend (React)
  frontend:
    build: ./client_managment_frontend  # Ruta al Dockerfile del frontend
    ports:
      - "3000:80"  # Mapea puerto 3000 (host) → 80 (contenedor Nginx)
    environment:
      REACT_APP_API_URL: http://backend:8080/api  # URL del backend en la red Docker
    depends_on:
      - backend
    networks:
      - app-network

  # Base de datos (PostgreSQL)
  postgres-db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: CLIENTS
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin1234
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

# Configuración de redes y volúmenes
volumes:
  postgres-data:

networks:
  app-network:
    driver: bridge