pipeline {
  agent {
    docker {
      image 'maven:3.8.6-jdk-11'
      args '-v $HOME/.m2:/root/.m2'    // cache de dependencias Maven
    }
  }

  environment {
    // Credenciales definidas en Jenkins (Manage Jenkins ‚Üí Credentials)
    DOCKER_REGISTRY = 'docker.io'
    DOCKER_CREDENTIALS = 'dockerhub-creds'  // ID de credencial Docker
    APP_NAME         = 'client-management-backend'
  }

  options {
    // Limita logs y tiempo de ejecuci√≥n
    timeout(time: 1, unit: 'HOURS')
    ansiColor('xterm')
  }

  stages {

    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Build & Unit Test') {
      steps {
        sh 'mvn clean verify -Dskip.ftl=true'
      }
      post {
        always {
          junit '**/target/surefire-reports/*.xml'
          archiveArtifacts artifacts: '**/target/*.jar', fingerprint: true
        }
      }
    }

    stage('Build Docker Image') {
      steps {
        script {
          docker.withRegistry("https://${env.DOCKER_REGISTRY}", env.DOCKER_CREDENTIALS) {
            def img = docker.build("${env.APP_NAME}:${env.BUILD_NUMBER}")
            // opcional: docker tag para latest o dev
            img.push('latest')
            img.push("${env.BUILD_NUMBER}")
          }
        }
      }
    }

    stage('Deploy to Dev') {
      steps {
        echo "Desplegando versi√≥n ${env.BUILD_NUMBER} en DEV..."
        // aqu√≠ el script o comando para tu entorno Dev
        // p.ej. kubectl set image deployment/${APP_NAME}-dev ${APP_NAME}=docker.io/miusuario/${APP_NAME}:${env.BUILD_NUMBER}
      }
    }

    stage('Deploy to QA') {
      when {
        branch 'main'             // solo en branch main
      }
      steps {
        input message: "¬øConfirmas Deploy a QA?", ok: "¬°S√≠, QA!"
        echo "Desplegando versi√≥n ${env.BUILD_NUMBER} en QA..."
        // tu comando de despliegue QA
      }
    }

    stage('Deploy to Prod') {
      when {
        branch 'main'
        expression {
          // solo si tag empieza por release-
          return env.GIT_TAG_NAME?.startsWith('release-')
        }
      }
      steps {
        input message: "¬øConfirmas Deploy a PRODUCTION?", ok: "¬°S√≠, Prod!"
        echo "Desplegando versi√≥n ${env.BUILD_NUMBER} en PRODUCTION..."
        // tu comando de despliegue Prod
      }
    }
  }

  post {
    success {
      echo 'Pipeline completado con √©xito üéâ'
    }
    failure {
      echo 'Algo fall√≥ en el pipeline ‚ùå'
    }
  }
}
